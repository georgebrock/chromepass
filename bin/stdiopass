#!/usr/bin/env python

import json
import struct
import sys


class ChromeNativeMessaging(object):
    """
    Reads and writes the Google Chrome native messaging protocol, which
    sends and recieves UTF-8 encoded JSON prefixed with a 4 byte length
    indicator.
    """

    class ConnectionClosed(Exception):
        pass

    def read(self):
        """
        Reads a message from Google Chrome, and returns it.
        Can raise a ChromeNativeMessaging.ConnectionClosed exception.
        """

        length_bytes = sys.stdin.read(4)

        if len(length_bytes) == 0:
            raise self.ConnectionClosed()

        length = struct.unpack('i', length_bytes)[0]
        message = sys.stdin.read(length).decode('utf-8')
        return json.loads(message)

    def write(self, payload):
        message = json.dumps(payload)
        sys.stdout.write(struct.pack('I', len(message)))
        sys.stdout.write(message)
        sys.stdout.flush()


chrome = ChromeNativeMessaging()
while True:
    try:
        message = chrome.read()
        chrome.write({'text': 'Message was %r' % message['text']})
    except ChromeNativeMessaging.ConnectionClosed:
        sys.exit(0)
